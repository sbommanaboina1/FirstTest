 https://basarat.gitbooks.io/typescript/content/docs/async-await.html
 
 
 export class AppComponent {
  public n: number = 1;

  constructor() {
    setTimeout(() => {
      this.n = this.n + 10;
    }, 1000);
  }

}
 
 
 $('div.highlightable').removeClass('highlighted');}, 2000);
https://github.com/JLynch7/SlickGrid/blob/2.0-frozenRowsAndColumns/examples/example-frozen-columns.html

https://github.com/mleibman/SlickGrid/wiki/DataView


https://www.npmjs.com/package/slickgrid



https://github.com/TonyLunt/angular2-gulp-environmental-configurations/tree/master/app

https://github.com/Arm1/Angular2SignalR

http://code.tutsplus.com/tutorials/start-using-html5-websockets-today--net-13270

Using jQuery from Angular2 is a breeze compared to ng1. If you are using TypeScript you could first reference jQuery typescript definition.
tsd install jquery --save
or
typings install dt~jquery --global --save
TypescriptDefinitions are not required since you could just use any as the type for $ or jQuery
In your angular component you should reference a DOM element from the template using @ViewChild() After the view has been initialized you can use the nativeElement property of this object and pass to jQuery.
Declaring $ (or jQuery) as JQueryStatic will give you a typed reference to jQuery. 
import {bootstrap}    from '@angular/platform-browser-dynamic';
import {Component, ViewChild, ElementRef, AfterViewInit} from '@angular/core';
declare var $:JQueryStatic;

@Component({
    selector: 'ng-chosen',
    template: `<select #selectElem>
        <option *ngFor="#item of items" [value]="item" [selected]="item === selectedValue">{{item}} option</option>
        </select>
        <h4> {{selectedValue}}</h4>`
})
export class NgChosenComponent implements AfterViewInit {
    @ViewChild('selectElem') el:ElementRef;
    items = ['First', 'Second', 'Third'];
    selectedValue = 'Second';

    ngAfterViewInit() {
        $(this.el.nativeElement)
            .chosen()
            .on('change', (e, args) => {
                this.selectedValue = args.selected;
            });
    }
}

bootstrap(NgChosenComponent);
This example is available on plunker: http://plnkr.co/edit/Nq9LnK?p=preview
tslint will complain about chosen not being a property on $, to fix this you can add a definition to the JQuery interface in your custom *.d.ts file
interface JQuery {
    chosen(options?:any):JQuery;
}    

https://blog.sstorie.com/integrating-angular-2-and-signalr-part-2-of-2/
https://github.com/sstorie/experiments/tree/master/angular2-signalr








http://blog.angular-academy.io/how-to-build-angular2-apps-using-rxjs-observable-data-services-pitfalls-to-avoid/

http://blog.rangle.io/observables-and-reactive-programming-in-angular-2/
http://blog.thoughtram.io/angular/2016/01/06/taking-advantage-of-observables-in-angular2.html
http://blog.angular-academy.io/how-to-build-angular2-apps-using-rxjs-observable-data-services-pitfalls-to-avoid/


https://github.com/JonHowes/AsyncAwaitWebApi/blob/master/TestClient/Program.cs


var client = new HttpClient(new ClientCompressionHandler(new GZipCompressor(), new DeflateCompressor()));

client.DefaultRequestHeaders.AcceptEncoding.Add(new StringWithQualityHeaderValue("gzip"));
client.DefaultRequestHeaders.AcceptEncoding.Add(new StringWithQualityHeaderValue("deflate"));

https://github.com/azzlack/Microsoft.AspNet.WebApi.MessageHandlers.Compression



http://stackoverflow.com/questions/16695975/calling-signalr-hub-from-webapi-controller-issues
http://www.strathweb.com/2012/11/realtime-asp-net-web-api-tracing-with-signalr/
https://github.com/filipw/WebAPI.SignalR.Tracing

https://weather.com/health/allergy/news/best-plants-for-cleaner-indoor-air
